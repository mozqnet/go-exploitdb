package util

import (
	"reflect"
	"testing"
)

func Test_FilterTargets(t *testing.T) {
	type args struct {
		prefixPath string
		target     map[string]struct{}
	}

	tests := []struct {
		args     args
		expected map[string]struct{}
	}{
		{
			args: args{
				prefixPath: "2016",
				target:     map[string]struct{}{"2016/CVE-2016-2107.json": {}, "2019/CVE-2019-15511.json": {}},
			},
			expected: map[string]struct{}{"2016/CVE-2016-2107.json": {}},
		},
	}

	for _, tt := range tests {
		got, err := FilterTargets(tt.args.prefixPath, tt.args.target)
		if err != nil {
			t.Errorf("FilterTargets() is err: %w", err)
		}

		if !reflect.DeepEqual(got, tt.expected) {
			t.Errorf("FilterTargets() expected: %v, actual: %v", tt.expected, got)
		}
	}
}
