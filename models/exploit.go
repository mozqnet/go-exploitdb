package models

import (
	"database/sql/driver"
	"time"
)

var offensiveSecurityDateFormat = "2006-01-02"

// ExploitType :
type ExploitType string

var (
	// OffensiveSecurityType : https://www.exploit-db.com/
	OffensiveSecurityType ExploitType = "OffensiveSecurity"
	// GitHubRepositoryType :
	GitHubRepositoryType ExploitType = "GitHub"
	// AwesomePocType :
	AwesomePocType ExploitType = "AwesomePoc"
)

// Exploit :
type Exploit struct {
	ID                int64              `json:"-"`
	ExploitType       ExploitType        `json:"exploit_type"`
	ExploitUniqueID   string             `json:"exploit_unique_id"`
	URL               string             `json:"url"`
	Description       string             `json:"description"`
	CveID             string             `gorm:"index:idx_exploit_exploit_cve_id" json:"cve_id"`
	OffensiveSecurity *OffensiveSecurity `json:"offensive_security"`
	GitHubRepository  *GitHubRepository  `json:"github_repository"`
}

// GitHubRepository :
type GitHubRepository struct {
	ID              int64     `json:"-"`
	ExploitID       int64     `json:"-"`
	ExploitUniqueID string    `gorm:"index:idx_exploit_github_repository_exploit_unique_id" json:"-"`
	Star            int       `json:"star"`
	Fork            int       `json:"fork"`
	CreatedAt       time.Time `json:"created_at"`
	UpdatedAt       time.Time `json:"updated_at"`
}

// OffensiveSecurity : https://www.exploit-db.com/
type OffensiveSecurity struct {
	ID              int64      `json:"-"`
	ExploitID       int64      `json:"-"`
	ExploitUniqueID string     `gorm:"index:idx_offensive_security_exploit_unique_id" json:"-"`
	Document        *Document  `json:"document"`
	ShellCode       *ShellCode `json:"shell_code"`
	Paper           *Paper     `json:"paper"`
}

// Document :
// https://github.com/offensive-security/exploitdb/tree/master/exploits
type Document struct {
	ID                  int64                 `json:"-"`
	OffensiveSecurityID int64                 `json:"-"`
	ExploitUniqueID     string                `gorm:"index:idx_exploit_document_exploit_unique_id" csv:"id" json:"-"`
	DocumentURL         string                `csv:"file" json:"document_url"`
	Description         string                `csv:"description" json:"description"`
	Date                OffensiveSecurityTime `gorm:"type:time" csv:"date" json:"date"`
	Author              string                `csv:"author" json:"author"`
	// docs local remote webapps
	Type     string `csv:"type" json:"type"`
	Platform string `csv:"platform" json:"palatform"`
	Port     string `csv:"port" json:"port"`
}

// ShellCode :
// https://github.com/offensive-security/exploitdb/tree/master/shellcodes
type ShellCode struct {
	ID                  int64                 `json:"-"`
	OffensiveSecurityID int64                 `json:"-"`
	ExploitUniqueID     string                `gorm:"index:idx_exploit_shell_code_exploit_unique_id" csv:"id" json:"-"`
	ShellCodeURL        string                `csv:"file" json:"shell_code_url"`
	Description         string                `csv:"description" json:"description"`
	Date                OffensiveSecurityTime `gorm:"type:time" csv:"date" json:"date"`
	Author              string                `csv:"author" json:"author"`
	Platform            string                `csv:"platform" json:"platform"`
}

// Paper :
// https://github.com/offensive-security/exploitdb-papers/blob/master/files_papers.csv
type Paper struct {
	ID                  int64                 `json:"-"`
	OffensiveSecurityID int64                 `json:"-"`
	ExploitUniqueID     string                `gorm:"index:idx_exploit_paper_exploit_unique_id" csv:"id" json:"-"`
	PaperURL            string                `csv:"file" json:"paper_path"`
	Description         string                `csv:"description" json:"description"`
	Date                OffensiveSecurityTime `csv:"date" json:"date"`
	Author              string                `csv:"author" json:"author"`
	Type                string                `csv:"type" json:"type"`
	Platform            string                `csv:"platform" json:"platform"`
	Language            string                `csv:"language" json:"language"`
}

// MitreXML :
// http://cve.mitre.org/cve/cvrf.html
type MitreXML struct {
	Vulnerability []struct {
		CVE        string `xml:"CVE"`
		References []struct {
			// External, Self
			AttrType    string `xml:"Type,attr"`
			URL         string `xml:"URL"`
			Description string `xml:"Description"`
		} `xml:"References>Reference"`
	} `xml:"Vulnerability"`
}

// GitHubRepoJSON :
type GitHubRepoJSON struct {
	Name        string    `json:"name"`
	FullName    string    `json:"full_name"`
	Description string    `json:"description"`
	URL         string    `json:"html_url"`
	Star        int       `json:"stargazers_count"`
	Fork        int       `json:"forks_count"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

// OffensiveSecurityTime :
type OffensiveSecurityTime struct {
	time.Time
}

// UnmarshalCSV :
// Convert the CSV string as internal date
func (date *OffensiveSecurityTime) UnmarshalCSV(csv string) (err error) {
	date.Time, err = time.Parse(offensiveSecurityDateFormat, csv)
	if err != nil {
		return err
	}
	return nil
}

// Scan :
func (date *OffensiveSecurityTime) Scan(value interface{}) error {
	date.Time = value.(time.Time)
	return nil
}

// Value :
func (date OffensiveSecurityTime) Value() (driver.Value, error) {
	return date.Time, nil
}
