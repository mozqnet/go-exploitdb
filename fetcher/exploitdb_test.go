package fetcher

import (
	"reflect"
	"testing"

	"github.com/vulsio/go-exploitdb/models"
)

func Test_ReproOffnsiveSecurityDa(t *testing.T) {
	type args struct {
		eid       string
		document  models.Document
		shellcode models.ShellCode
		paper     models.Paper
	}

	var tests = []struct {
		in       args
		expected *models.OffensiveSecurity
	}{
		{
			in: args{
				eid: "1",
				document: models.Document{
					ExploitUniqueID: "1",
					DocumentURL:     "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Port:            "port",
				},
				shellcode: models.ShellCode{
					ExploitUniqueID: "1",
					ShellCodeURL:    "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Platform:        "platform",
				},
				paper: models.Paper{
					ExploitUniqueID: "1",
					PaperURL:        "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Language:        "language",
				},
			},
			expected: &models.OffensiveSecurity{
				Document: &models.Document{
					ExploitUniqueID: "1",
					DocumentURL:     "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Port:            "port",
				},
				ShellCode: &models.ShellCode{
					ExploitUniqueID: "1",
					ShellCodeURL:    "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Platform:        "platform",
				},
				Paper: &models.Paper{
					ExploitUniqueID: "1",
					PaperURL:        "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Language:        "language",
				},
			},
		},
		{
			in: args{
				eid: "1",
				document: models.Document{
					ExploitUniqueID: "",
					DocumentURL:     "",
					Description:     "",
					Date:            models.OffensiveSecurityTime{},
					Author:          "",
					Type:            "",
					Platform:        "",
					Port:            "",
				},
				shellcode: models.ShellCode{
					ExploitUniqueID: "1",
					ShellCodeURL:    "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Platform:        "platform",
				},
				paper: models.Paper{
					ExploitUniqueID: "1",
					PaperURL:        "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Language:        "language",
				},
			},
			expected: &models.OffensiveSecurity{
				Document: nil,
				ShellCode: &models.ShellCode{
					ExploitUniqueID: "1",
					ShellCodeURL:    "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Platform:        "platform",
				},
				Paper: &models.Paper{
					ExploitUniqueID: "1",
					PaperURL:        "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Language:        "language",
				},
			},
		},
		{
			in: args{
				eid: "1",
				document: models.Document{
					ExploitUniqueID: "1",
					DocumentURL:     "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Port:            "port",
				},
				shellcode: models.ShellCode{
					ExploitUniqueID: "",
					ShellCodeURL:    "",
					Description:     "",
					Date:            models.OffensiveSecurityTime{},
					Author:          "",
					Platform:        "",
				},
				paper: models.Paper{
					ExploitUniqueID: "1",
					PaperURL:        "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Language:        "language",
				},
			},
			expected: &models.OffensiveSecurity{
				Document: &models.Document{
					ExploitUniqueID: "1",
					DocumentURL:     "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Port:            "port",
				},
				ShellCode: nil,
				Paper: &models.Paper{
					ExploitUniqueID: "1",
					PaperURL:        "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Language:        "language",
				},
			},
		},
		{
			in: args{
				eid: "1",
				document: models.Document{
					ExploitUniqueID: "1",
					DocumentURL:     "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Port:            "port",
				},
				shellcode: models.ShellCode{
					ExploitUniqueID: "1",
					ShellCodeURL:    "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Platform:        "platform",
				},
				paper: models.Paper{
					ExploitUniqueID: "",
					PaperURL:        "",
					Description:     "",
					Date:            models.OffensiveSecurityTime{},
					Author:          "",
					Type:            "",
					Platform:        "",
					Language:        "",
				},
			},
			expected: &models.OffensiveSecurity{
				Document: &models.Document{
					ExploitUniqueID: "1",
					DocumentURL:     "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Type:            "type",
					Platform:        "platform",
					Port:            "port",
				},
				ShellCode: &models.ShellCode{
					ExploitUniqueID: "1",
					ShellCodeURL:    "url",
					Description:     "description",
					Date:            models.OffensiveSecurityTime{},
					Author:          "author",
					Platform:        "platform",
				},
				Paper: nil,
			},
		},
		{
			in: args{
				eid: "1",
				document: models.Document{
					ExploitUniqueID: "",
					DocumentURL:     "",
					Description:     "",
					Date:            models.OffensiveSecurityTime{},
					Author:          "",
					Type:            "",
					Platform:        "",
					Port:            "",
				},
				shellcode: models.ShellCode{
					ExploitUniqueID: "",
					ShellCodeURL:    "",
					Description:     "",
					Date:            models.OffensiveSecurityTime{},
					Author:          "",
					Platform:        "",
				},
				paper: models.Paper{
					ExploitUniqueID: "",
					PaperURL:        "",
					Description:     "",
					Date:            models.OffensiveSecurityTime{},
					Author:          "",
					Type:            "",
					Platform:        "",
					Language:        "",
				},
			},
			expected: &models.OffensiveSecurity{},
		},
	}

	for i, tt := range tests {
		if aout := reproOffensiveSecurityData(tt.in.document, tt.in.shellcode, tt.in.paper); !reflect.DeepEqual(tt.expected, aout) {
			t.Errorf("[%d] reproOffnsiveSecurityData expected: %#v\n  actual: %#v\n", i, tt.expected, aout)
		}
	}
}
