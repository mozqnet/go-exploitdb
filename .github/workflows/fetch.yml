name: Fetch Test

on:
  pull_request:
  schedule:
  - cron: '0 0 * * *'

jobs:
  fetch-exploitdb:
    name: fetch-exploitdb
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: build
        id: build
        run: make build
      - name: fetch sqlite3
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype sqlite3 exploitdb
      - name: fetch mysql
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype mysql --dbpath "root:password@tcp(127.0.0.1:3306)/test?parseTime=true" exploitdb
      - name: fetch postgres
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype postgres --dbpath "host=127.0.0.1 user=postgres dbname=test sslmode=disable password=password" exploitdb
      - name: fetch redis
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype redis --dbpath "redis://127.0.0.1:6379/0" exploitdb

  fetch-awesomepoc:
    name: fetch-awesomepoc
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: build
        id: build
        run: make build
      - name: fetch sqlite3
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype sqlite3 awesomepoc
      - name: fetch mysql
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype mysql --dbpath "root:password@tcp(127.0.0.1:3306)/test?parseTime=true" awesomepoc
      - name: fetch postgres
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype postgres --dbpath "host=127.0.0.1 user=postgres dbname=test sslmode=disable password=password" awesomepoc
      - name: fetch redis
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype redis --dbpath "redis://127.0.0.1:6379/0" awesomepoc

  fetch-githubrepos:
    name: fetch-githubrepos
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: build
        id: build
        run: make build
      - name: fetch sqlite3
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype sqlite3 githubrepos
      - name: fetch mysql
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype mysql --dbpath "root:password@tcp(127.0.0.1:3306)/test?parseTime=true" githubrepos
      - name: fetch postgres
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype postgres --dbpath "host=127.0.0.1 user=postgres dbname=test sslmode=disable password=password" githubrepos
      - name: fetch redis
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype redis --dbpath "redis://127.0.0.1:6379/0" githubrepos

  fetch-inthewild:
    name: fetch-inthewild
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
      - name: build
        id: build
        run: make build
      - name: fetch sqlite3
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype sqlite3 inthewild
      - name: fetch mysql
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype mysql --dbpath "root:password@tcp(127.0.0.1:3306)/test?parseTime=true" inthewild
      - name: fetch postgres
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype postgres --dbpath "host=127.0.0.1 user=postgres dbname=test sslmode=disable password=password" inthewild
      - name: fetch redis
        if: ${{ steps.build.conclusion == 'success' && ( success() || failure() )}}
        run: ./go-exploitdb fetch --dbtype redis --dbpath "redis://127.0.0.1:6379/0" inthewild
